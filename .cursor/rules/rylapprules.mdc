---
description: 
globs: 
alwaysApply: true
---

### 命令行
现在是在windows10系统下， openshell不支持&&语法命令行不要使用&&。
注意创建目录，文件时，采用一个一个创建方式，(不支持批量文件创建，需要一个一个创建才能成功)
我在对话框取消了命令行的运行就是说明我已经在终端运行了命令。

### 模拟数据禁止使用
调试错误不要使用任何的模拟数据、示例，现在就是正常在开发前后端项目，任何代码中的模拟数据和示例都是禁止的，数据只参考数据库文件。

### 修改代码注意
要求你更新或者修改一个文件前，先读取一下原文件，字段、函数、类型尽量沿用之前文件的，不行的话再新建新的字段、函数、类型等。数据库内字段谨慎添加新的字段，除非必须添加的。

### 新UI设计
新的UI界面或者卡片设计时新建文件，先看下是否需要进行模块化设计，再考虑直接修改。
高保真 UI设计:设计贴近真实 i0S/Android 设计规范的界面，使用现代化的UI元素，使其具有良好的视觉体验。

### 工具call出错时
对于有着特别大量的代码更新的文件，不用一次性给出所有代码，可以分多个小步骤来替换，避免出错。
Tool call timed out after 10s (read file)出现时，不要跳过read，继续试着读取。

### 前端说明
前端目录：D:\Android\rylappfront\ryl-engineer-app
前端的技术栈：
技术采上工程管理采用vte
前端框架采用vue3，使用Tailwind CSS样式，
使用开源图标库制作UI，使用真实的UI图片而不是占位符
路由采用vue-router
状态管理采用pinia 
布局内容采用原型中html代码。

### 后端说明
后端目录：D:\Android\rylappfront\ryl-engineer-back
后端SpringBoot+MyBatis+PageHelper工程
主要技术版本：
Spring Boot 2.7.18
MyBatis 3.5.15
MyBatis Spring Boot Starter 2.3.2
PageHelper 6.1.0

后端项目结构：
遵循标准的Maven项目结构
按照功能模块划分包结构（controller、service、mapper、entity等）
配置了必要的配置文件（application.yml、mybatis-config.xml、logback-spring.xml）
基础功能：
全局异常处理
统一响应结果封装
跨域配置
日志配置
分页工具类
常用工具类


### 一致性要求：
前后端以及数据库，1、数据交互的字段命名方式一致使用驼峰命名法且名称要一致，2、API路径要一致，前后端路径都按参考登录模块的API路径（`/api/v1/user/login`）来设置3、前后访问输出和接受的数据交互格式一致。4、端口一致，前后端的端口是8089

### 项目log要求
修改代码后及时更新根目录log.md（没有就创建一个），记录每次的更改内容（已经实现了什么）和改动目的、有修复问题的话就记录修复问题的经验（下次同类型的问题要注意什么），使用web查询记录下当前北京时间后再做更新，且每次修改内容设置一个版本号上加1，如原log中最大的版本好是0.3.1，那就再0.3.1的基础上更新一次就加1，那么这一次的版本好就记为0.3.2，如果新建log文件就从0.0.1开始。


### 代码风格和结构
- 编写简洁、专业的 TypeScript 代码
- 优先使用迭代和模块化，避免代码重复。
- 使用带有助动词的描述性变量名（例如 isLoading、hasError）。
- 文件结构：导出组件、子组件、辅助函数、静态内容、类型。

#### 添加内容前注意事项：
添加新的代码、依赖、函数、参数、字段等内容前先确定要添加进的这个文件是不是已经存在了相同或者相似的内容，研究后再决定加不加。

### 项目说明
参考RYLAPP\项目说明2 和 RYLAPP\项目说明 中的文件
