<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryl.engineer.mapper.ChatMessageMapper">
    
    <resultMap id="BaseResultMap" type="com.ryl.engineer.entity.ChatMessage">
        <id column="id" property="id" />
        <result column="conversation_id" property="conversationId" />
        <result column="sender_id" property="senderId" />
        <result column="sender_name" property="senderName" />
        <result column="sender_avatar" property="senderAvatar" />
        <result column="content" property="content" />
        <result column="content_type" property="contentType" />
        <result column="send_time" property="sendTime" />
        <result column="status" property="status" />
    </resultMap>
    
    <sql id="Base_Column_List">
        id, conversation_id, sender_id, sender_name, sender_avatar, content, content_type, send_time, status
    </sql>
    
    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT 
            <include refid="Base_Column_List" />
        FROM dbo.chat_message
        WHERE id = #{id}
    </select>
    
    <select id="selectByConversationId" resultMap="BaseResultMap">
        SELECT 
            <include refid="Base_Column_List" />
        FROM dbo.chat_message
        WHERE conversation_id = #{conversationId} AND status = 1
        <if test="startTime != null and startTime != ''">
            AND send_time >= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND send_time &lt;= #{endTime}
        </if>
        ORDER BY send_time
    </select>
    
    <select id="selectLastMessageByConversationId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT 
            <include refid="Base_Column_List" />
        FROM dbo.chat_message
        WHERE conversation_id = #{conversationId} AND status = 1
        ORDER BY send_time DESC
        LIMIT 1
    </select>
    
    <select id="countByConversationId" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM dbo.chat_message
        WHERE conversation_id = #{conversationId} AND status = 1
    </select>
    
    <select id="countByConversationIdAfterTime" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM dbo.chat_message
        WHERE conversation_id = #{conversationId} AND status = 1
        AND send_time > #{time}
    </select>
    
    <insert id="insert" parameterType="com.ryl.engineer.entity.ChatMessage">
        INSERT INTO dbo.chat_message (
            id, conversation_id, sender_id, sender_name, sender_avatar, content, content_type, send_time, status
        ) VALUES (
            #{id}, #{conversationId}, #{senderId}, #{senderName}, #{senderAvatar}, 
            #{content}, #{contentType}, #{sendTime}, #{status}
        )
    </insert>
    
    <update id="update" parameterType="com.ryl.engineer.entity.ChatMessage">
        UPDATE dbo.chat_message
        <set>
            <if test="content != null">content = #{content},</if>
            <if test="status != null">status = #{status}</if>
        </set>
        WHERE id = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.String">
        UPDATE dbo.chat_message
        SET status = 0
        WHERE id = #{id}
    </delete>
    
    <delete id="deleteByConversationId" parameterType="java.lang.String">
        UPDATE dbo.chat_message
        SET status = 0
        WHERE conversation_id = #{conversationId}
    </delete>
</mapper> 